Да, можно настроить автоматическую загрузку файлов по FTP, добавив соответствующий скрипт в вашу команду npm run deploy. Для этого можно использовать пакет ftp-deploy, который позволяет загружать файлы по FTP.

Установите пакет ftp-deploy:

bash
Копировать код
npm install ftp-deploy
Создайте файл конфигурации ftp-deploy-config.js в корне вашего проекта:

javascript
Копировать код
const FtpDeploy = require("ftp-deploy");
const ftpDeploy = new FtpDeploy();

const config = {
  user: "your-ftp-username",
  password: "your-ftp-password",
  host: "your-ftp-host",
  port: 21,
  localRoot: __dirname + "/build",
  remoteRoot: "/path/to/remote/directory",
  include: ["*", "**/*"], // This uploads all files
  deleteRemote: false, // Set this to true if you want to delete existing files
  forcePasv: true // Optional for some servers
};

ftpDeploy.deploy(config, function(err) {
  if (err) console.log(err);
  else console.log("finished");
});
Замените your-ftp-username, your-ftp-password, your-ftp-host, и /path/to/remote/directory на соответствующие значения для вашего FTP-сервера.

Обновите ваш скрипт deploy в package.json:

json
Копировать код
"scripts": {
  "deploy": "npm run build && git add . && git commit -m \"commit\" && git push && node ftp-deploy-config.js"
}
Теперь, когда вы запустите npm run deploy, будет происходить сборка проекта, коммит и пуш в Git, а затем загрузка содержимого папки build на ваш FTP-сервер с заменой существующих файлов.

Если вам необходимо более детально настроить процесс, вы можете ознакомиться с документацией ftp-deploy.